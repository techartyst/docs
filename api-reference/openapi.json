{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment-links/create": {
      "post": {
        "description": "Creates a new payment link with specified details.",
        "requestBody": {
          "description": "Details for the payment link to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment link created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentLinkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or error in creating payment link.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/payment-links/status": {
      "post": {
        "description": "Checks the status of a payment link based on transaction reference.",
        "requestBody": {
          "description": "Transaction reference for querying the payment status.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusCheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment status response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or error in retrieving payment status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePaymentRequest": {
        "type": "object",
        "required": ["name", "amount"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the customer."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "The amount for the payment."
          },
          "notes": {
            "type": "string",
            "description": "Additional notes for the payment, if any."
          }
        }
      },
      "StatusCheckRequest": {
        "type": "object",
        "required": ["transactionReference"],
        "properties": {
          "transactionReference": {
            "type": "string",
            "description": "Unique reference for the transaction to check status."
          }
        }
      },
      "PaymentLinkResponse": {
        "type": "object",
        "properties": {
          "paymentLink": {
            "type": "string",
            "format": "uri",
            "description": "The URL generated for the payment link."
          }
        }
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Current status of the payment (e.g., 'Pending', 'Completed', 'Failed')."
          },
          "transactionReference": {
            "type": "string",
            "description": "Unique reference of the queried transaction."
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32",
            "description": "Error code representing the type of error."
          },
          "message": {
            "type": "string",
            "description": "Description of the error."
          }
        }
      },
      "Plant": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the plant."
          },
          "tag": {
            "type": "string",
            "description": "Tag to specify the type."
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
